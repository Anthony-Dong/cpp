name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 # cmake 没办法被cache住

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "15.0"

      - name: Clang Info
        working-directory: ${{github.workspace}}
        run: clang++ --version && clang --version
      - name: Install Vcpkg
        working-directory: ${{github.workspace}}
        run: git clone github.com/microsoft/vcpkg --depth 1
      - name: Build
        working-directory: ${{github.workspace}}
        # Build your program with the given configuration
        run: make CC=clang CXX=clang++ VCPKG_HOME=${{github.workspace}}/vcpkg BUILD_TYPE=${{env.BUILD_TYPE}} BUILD_DIRECTORY=${{github.workspace}}/output

      - name: Run
        working-directory: ${{github.workspace}}/output
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ./main