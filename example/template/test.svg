<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
    <!-- NOTES:  -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
            <stop stop-color="#eeeeee" offset="5%" />
            <stop stop-color="#eeeeb0" offset="95%" />
        </linearGradient>
    </defs>
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search, #ignorecase { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
    <text id="title" x="600.00" y="24" >Flame Graph</text>
    <text id="details" x="10.00" y="373" > </text>
    <text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090.00" y="24" >Search</text>
    <text id="ignorecase" x="1174.00" y="24" >ic</text>
    <text id="matched" x="1090.00" y="373" > </text>
    <g id="frames">
        <g >
            <title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;UserInfo&gt;, UserInfo&gt;::_S_select_on_copy (1,250,000 samples, 0.51%)</title><rect x="36.2" y="213" width="6.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
            <text  x="39.22" y="223.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::~vector (750,000 samples, 0.30%)</title><rect x="428.4" y="229" width="3.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
            <text  x="431.36" y="239.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::base (250,000 samples, 0.10%)</title><rect x="308.0" y="197" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
            <text  x="310.98" y="207.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;UserInfo&gt;::deallocate (250,000 samples, 0.10%)</title><rect x="712.0" y="181" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="715.04" y="191.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (6,000,000 samples, 2.42%)</title><rect x="592.8" y="229" width="28.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
            <text  x="595.85" y="239.5" >st..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,000,000 samples, 0.40%)</title><rect x="1117.3" y="101" width="4.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="1120.29" y="111.5" ></text>
        </g>
        <g >
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;UserInfo const*, UserInfo*&gt; (31,500,000 samples, 12.73%)</title><rect x="924.2" y="181" width="150.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
            <text  x="927.20" y="191.5" >std::__uninitialize..</text>
        </g>
        <g >
            <title>_int_free (750,000 samples, 0.30%)</title><rect x="714.4" y="165" width="3.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
            <text  x="717.42" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (250,000 samples, 0.10%)</title><rect x="864.6" y="197" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="867.61" y="207.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator- (500,000 samples, 0.20%)</title><rect x="584.5" y="181" width="2.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
            <text  x="587.51" y="191.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;UserInfo&gt; (250,000 samples, 0.10%)</title><rect x="1072.0" y="165" width="1.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
            <text  x="1075.00" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_impl::_M_swap_data (2,750,000 samples, 1.11%)</title><rect x="211.4" y="181" width="13.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
            <text  x="214.43" y="191.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_impl::_Vector_impl (1,000,000 samples, 0.40%)</title><rect x="224.5" y="181" width="4.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
            <text  x="227.55" y="191.5" ></text>
        </g>
        <g >
            <title>ArrayStream&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::Move (4,750,000 samples, 1.92%)</title><rect x="725.2" y="245" width="22.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
            <text  x="728.15" y="255.5" >A..</text>
        </g>
        <g >
            <title>std::addressof&lt;char const&gt; (250,000 samples, 0.10%)</title><rect x="697.7" y="69" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
            <text  x="700.74" y="79.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::operator!=&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt; (500,000 samples, 0.20%)</title><rect x="784.7" y="245" width="2.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
            <text  x="787.75" y="255.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::base (250,000 samples, 0.10%)</title><rect x="291.3" y="213" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
            <text  x="294.29" y="223.5" ></text>
        </g>
        <g >
            <title>main (243,000,000 samples, 98.18%)</title><rect x="10.0" y="277" width="1158.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
            <text  x="13.00" y="287.5" >main</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (750,000 samples, 0.30%)</title><rect x="1151.9" y="149" width="3.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
            <text  x="1154.86" y="159.5" ></text>
        </g>
        <g >
            <title>std::distance&lt;char*&gt; (750,000 samples, 0.30%)</title><rect x="149.5" y="69" width="3.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
            <text  x="152.45" y="79.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char*&gt;::pointer_to (750,000 samples, 0.30%)</title><rect x="162.6" y="101" width="3.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="165.57" y="111.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_get_Tp_allocator (250,000 samples, 0.10%)</title><rect x="1130.4" y="229" width="1.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
            <text  x="1133.40" y="239.5" ></text>
        </g>
        <g >
            <title>ArrayStream&lt;UserInfo&gt;::Map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (42,750,000 samples, 17.27%)</title><rect x="431.9" y="245" width="203.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
            <text  x="434.94" y="255.5" >ArrayStream&lt;UserInfo&gt;::Map..</text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (500,000 samples, 0.20%)</title><rect x="589.3" y="165" width="2.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
            <text  x="592.27" y="175.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::vector (38,000,000 samples, 15.35%)</title><rect x="902.7" y="245" width="181.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
            <text  x="905.75" y="255.5" >std::vector&lt;UserInfo, s..</text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (750,000 samples, 0.30%)</title><rect x="965.9" y="101" width="3.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="968.92" y="111.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::_Function_base (500,000 samples, 0.20%)</title><rect x="889.6" y="229" width="2.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
            <text  x="892.64" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.10%)</title><rect x="520.1" y="165" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="523.14" y="175.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::~allocator@plt (250,000 samples, 0.10%)</title><rect x="700.1" y="117" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
            <text  x="703.12" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (750,000 samples, 0.30%)</title><rect x="777.6" y="181" width="3.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="780.60" y="191.5" ></text>
        </g>
        <g >
            <title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2,250,000 samples, 0.91%)</title><rect x="608.3" y="197" width="10.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
            <text  x="611.34" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1,000,000 samples, 0.40%)</title><rect x="1150.7" y="181" width="4.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
            <text  x="1153.67" y="191.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocator (250,000 samples, 0.10%)</title><rect x="743.0" y="197" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="746.03" y="207.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::allocator (250,000 samples, 0.10%)</title><rect x="93.4" y="101" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
            <text  x="96.43" y="111.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (250,000 samples, 0.10%)</title><rect x="501.1" y="149" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="504.07" y="159.5" ></text>
        </g>
        <g >
            <title>std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::base (250,000 samples, 0.10%)</title><rect x="617.9" y="117" width="1.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
            <text  x="620.88" y="127.5" ></text>
        </g>
        <g >
            <title>test (241,750,000 samples, 97.68%)</title><rect x="16.0" y="261" width="1152.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
            <text  x="18.96" y="271.5" >test</text>
        </g>
        <g >
            <title>ArrayStream&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::ArrayStream (7,250,000 samples, 2.93%)</title><rect x="437.9" y="229" width="34.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
            <text  x="440.90" y="239.5" >Ar..</text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::copy (500,000 samples, 0.20%)</title><rect x="515.4" y="85" width="2.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="518.37" y="95.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (3,250,000 samples, 1.31%)</title><rect x="729.9" y="213" width="15.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="732.92" y="223.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::__normal_iterator (750,000 samples, 0.30%)</title><rect x="527.3" y="213" width="3.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
            <text  x="530.29" y="223.5" ></text>
        </g>
        <g >
            <title>__memmove_avx_unaligned_erms (1,250,000 samples, 0.51%)</title><rect x="1023.1" y="37" width="6.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
            <text  x="1026.13" y="47.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::copy (1,250,000 samples, 0.51%)</title><rect x="141.1" y="37" width="6.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="144.11" y="47.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (3,750,000 samples, 1.52%)</title><rect x="367.6" y="117" width="17.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
            <text  x="370.58" y="127.5" ></text>
        </g>
        <g >
            <title>ArrayStream&lt;UserInfo&gt;::ArrayStream (35,000,000 samples, 14.14%)</title><rect x="29.1" y="245" width="166.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
            <text  x="32.07" y="255.5" >ArrayStream&lt;UserInfo&gt;..</text>
        </g>
        <g >
            <title>std::_Function_base::_M_empty (750,000 samples, 0.30%)</title><rect x="255.5" y="213" width="3.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
            <text  x="258.54" y="223.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&amp;&gt; (750,000 samples, 0.30%)</title><rect x="458.2" y="149" width="3.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
            <text  x="461.16" y="159.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::__normal_iterator (250,000 samples, 0.10%)</title><rect x="180.4" y="197" width="1.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
            <text  x="183.44" y="207.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::operator!=&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt; (250,000 samples, 0.10%)</title><rect x="56.5" y="181" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
            <text  x="59.48" y="191.5" ></text>
        </g>
        <g >
            <title>[unknown] (243,250,000 samples, 98.28%)</title><rect x="10.0" y="309" width="1159.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
            <text  x="13.00" y="319.5" >[unknown]</text>
        </g>
        <g >
            <title>std::_Function_base::_Base_manager&lt;test (1,000,000 samples, 0.40%)</title><rect x="884.9" y="229" width="4.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
            <text  x="887.87" y="239.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::__normal_iterator (500,000 samples, 0.20%)</title><rect x="42.2" y="213" width="2.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
            <text  x="45.18" y="223.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::vector (4,750,000 samples, 1.92%)</title><rect x="207.9" y="213" width="22.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
            <text  x="210.86" y="223.5" >s..</text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;UserInfo&gt; &gt;::allocate (250,000 samples, 0.10%)</title><rect x="50.5" y="165" width="1.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
            <text  x="53.53" y="175.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (250,000 samples, 0.10%)</title><rect x="470.1" y="197" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
            <text  x="473.08" y="207.5" ></text>
        </g>
        <g >
            <title>UserInfo::UserInfo (19,750,000 samples, 7.98%)</title><rect x="81.5" y="149" width="94.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
            <text  x="84.52" y="159.5" >UserInfo::U..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (750,000 samples, 0.30%)</title><rect x="1002.9" y="53" width="3.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="1005.87" y="63.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::assign (1,000,000 samples, 0.40%)</title><rect x="836.0" y="165" width="4.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
            <text  x="839.00" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1,000,000 samples, 0.40%)</title><rect x="831.2" y="165" width="4.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
            <text  x="834.23" y="175.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;UserInfo&gt; &gt;::allocate (750,000 samples, 0.30%)</title><rect x="319.9" y="181" width="3.6" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
            <text  x="322.90" y="191.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~allocator (500,000 samples, 0.20%)</title><rect x="1165.0" y="197" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
            <text  x="1167.97" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (250,000 samples, 0.10%)</title><rect x="631.0" y="213" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
            <text  x="633.99" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo*, UserInfo&gt; (13,250,000 samples, 5.35%)</title><rect x="640.5" y="213" width="63.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="643.53" y="223.5" >std::_..</text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,500,000 samples, 4.24%)</title><rect x="542.8" y="213" width="50.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
            <text  x="545.79" y="223.5" >std::..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (500,000 samples, 0.20%)</title><rect x="1104.2" y="133" width="2.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
            <text  x="1107.18" y="143.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char*&gt;::pointer_to (750,000 samples, 0.30%)</title><rect x="865.8" y="213" width="3.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="868.80" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo*&gt; (250,000 samples, 0.10%)</title><rect x="428.4" y="197" width="1.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
            <text  x="431.36" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_create_storage (1,500,000 samples, 0.61%)</title><rect x="44.6" y="197" width="7.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
            <text  x="47.57" y="207.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (250,000 samples, 0.10%)</title><rect x="1155.4" y="181" width="1.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
            <text  x="1158.43" y="191.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::end (250,000 samples, 0.10%)</title><rect x="290.1" y="229" width="1.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
            <text  x="293.10" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (6,000,000 samples, 2.42%)</title><rect x="990.9" y="69" width="28.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="993.95" y="79.5" >st..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,750,000 samples, 1.11%)</title><rect x="119.7" y="69" width="13.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="122.66" y="79.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1,500,000 samples, 0.61%)</title><rect x="628.6" y="229" width="7.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
            <text  x="631.61" y="239.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::~allocator (250,000 samples, 0.10%)</title><rect x="13.6" y="261" width="1.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
            <text  x="16.58" y="271.5" ></text>
        </g>
        <g >
            <title>std::_Any_data::_M_access&lt;test (250,000 samples, 0.10%)</title><rect x="267.5" y="197" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
            <text  x="270.45" y="207.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (10,750,000 samples, 4.34%)</title><rect x="541.6" y="229" width="51.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
            <text  x="544.60" y="239.5" >std::..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (500,000 samples, 0.20%)</title><rect x="515.4" y="101" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
            <text  x="518.37" y="111.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::deallocate (750,000 samples, 0.30%)</title><rect x="1161.4" y="197" width="3.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
            <text  x="1164.39" y="207.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char const*&gt;::pointer_to (500,000 samples, 0.20%)</title><rect x="552.3" y="117" width="2.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
            <text  x="555.32" y="127.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (750,000 samples, 0.30%)</title><rect x="94.6" y="101" width="3.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="97.63" y="111.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char const*&gt;::pointer_to (750,000 samples, 0.30%)</title><rect x="1124.4" y="85" width="3.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
            <text  x="1127.44" y="95.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;UserInfo&gt; (250,000 samples, 0.10%)</title><rect x="58.9" y="181" width="1.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
            <text  x="61.87" y="191.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;UserInfo&gt;::max_size (250,000 samples, 0.10%)</title><rect x="402.1" y="149" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
            <text  x="405.14" y="159.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;UserInfo&gt;::new_allocator (250,000 samples, 0.10%)</title><rect x="38.6" y="181" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
            <text  x="41.61" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (10,500,000 samples, 4.24%)</title><rect x="815.7" y="213" width="50.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
            <text  x="818.74" y="223.5" >std::..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,000,000 samples, 0.81%)</title><rect x="688.2" y="85" width="9.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="691.20" y="95.5" ></text>
        </g>
        <g >
            <title>operator delete (250,000 samples, 0.10%)</title><rect x="720.4" y="165" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
            <text  x="723.38" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (250,000 samples, 0.10%)</title><rect x="989.8" y="69" width="1.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
            <text  x="992.76" y="79.5" ></text>
        </g>
        <g >
            <title>std::move&lt;test (250,000 samples, 0.10%)</title><rect x="888.4" y="213" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
            <text  x="891.44" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo&gt; (250,000 samples, 0.10%)</title><rect x="644.1" y="181" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="647.10" y="191.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::back (2,000,000 samples, 0.81%)</title><rect x="582.1" y="197" width="9.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
            <text  x="585.12" y="207.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__is_null_pointer&lt;char&gt; (500,000 samples, 0.20%)</title><rect x="986.2" y="69" width="2.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
            <text  x="989.18" y="79.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;char const&gt; (250,000 samples, 0.10%)</title><rect x="1154.2" y="69" width="1.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
            <text  x="1157.24" y="79.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (1,000,000 samples, 0.40%)</title><rect x="623.8" y="213" width="4.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="626.84" y="223.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (7,250,000 samples, 2.93%)</title><rect x="546.4" y="197" width="34.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
            <text  x="549.36" y="207.5" >st..</text>
        </g>
        <g >
            <title>std::swap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (250,000 samples, 0.10%)</title><rect x="468.9" y="181" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
            <text  x="471.89" y="191.5" ></text>
        </g>
        <g >
            <title>__memmove_avx_unaligned_erms (1,000,000 samples, 0.40%)</title><rect x="136.3" y="37" width="4.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
            <text  x="139.34" y="47.5" ></text>
        </g>
        <g >
            <title>std::initializer_list&lt;UserInfo&gt;::end (250,000 samples, 0.10%)</title><rect x="908.7" y="229" width="1.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
            <text  x="911.71" y="239.5" ></text>
        </g>
        <g >
            <title>_dl_sysdep_start (250,000 samples, 0.10%)</title><rect x="1168.5" y="293" width="1.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
            <text  x="1171.55" y="303.5" ></text>
        </g>
        <g >
            <title>std::move&lt;test (250,000 samples, 0.10%)</title><rect x="899.2" y="245" width="1.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
            <text  x="902.17" y="255.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&gt; (250,000 samples, 0.10%)</title><rect x="746.6" y="213" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
            <text  x="749.61" y="223.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (750,000 samples, 0.30%)</title><rect x="482.0" y="181" width="3.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="485.00" y="191.5" ></text>
        </g>
        <g >
            <title>std::move_iterator&lt;UserInfo*&gt;::move_iterator (500,000 samples, 0.20%)</title><rect x="327.1" y="165" width="2.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
            <text  x="330.05" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (250,000 samples, 0.10%)</title><rect x="1150.7" y="149" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
            <text  x="1153.67" y="159.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (500,000 samples, 0.20%)</title><rect x="619.1" y="213" width="2.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
            <text  x="622.07" y="223.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,250,000 samples, 0.51%)</title><rect x="1047.0" y="117" width="5.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="1049.97" y="127.5" ></text>
        </g>
        <g >
            <title>std::forward&lt;UserInfo const&amp;&gt; (750,000 samples, 0.30%)</title><rect x="175.7" y="149" width="3.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
            <text  x="178.68" y="159.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;UserInfo&gt; &gt;::deallocate (750,000 samples, 0.30%)</title><rect x="1136.4" y="197" width="3.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
            <text  x="1139.36" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::_Base_manager&lt;test (750,000 samples, 0.30%)</title><rect x="895.6" y="213" width="3.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
            <text  x="898.60" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo*, UserInfo&gt; (250,000 samples, 0.10%)</title><rect x="247.2" y="229" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="250.19" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (250,000 samples, 0.10%)</title><rect x="1045.8" y="117" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
            <text  x="1048.78" y="127.5" ></text>
        </g>
        <g >
            <title>_int_free (1,250,000 samples, 0.51%)</title><rect x="1169.7" y="309" width="6.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
            <text  x="1172.74" y="319.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::operator!=&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt; (1,500,000 samples, 0.61%)</title><rect x="73.2" y="165" width="7.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
            <text  x="76.17" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Function_handler&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (8,250,000 samples, 3.33%)</title><rect x="485.6" y="213" width="39.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="488.58" y="223.5" >std..</text>
        </g>
        <g >
            <title>std::distance&lt;UserInfo const*&gt; (2,000,000 samples, 0.81%)</title><rect x="1074.4" y="213" width="9.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
            <text  x="1077.38" y="223.5" ></text>
        </g>
        <g >
            <title>std::__distance&lt;char*&gt; (250,000 samples, 0.10%)</title><rect x="1032.7" y="69" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
            <text  x="1035.67" y="79.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (11,000,000 samples, 4.44%)</title><rect x="813.4" y="229" width="52.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
            <text  x="816.35" y="239.5" >std::..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,000,000 samples, 1.21%)</title><rect x="826.5" y="181" width="14.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="829.46" y="191.5" ></text>
        </g>
        <g >
            <title>std::addressof&lt;char&gt; (500,000 samples, 0.20%)</title><rect x="163.8" y="85" width="2.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
            <text  x="166.76" y="95.5" ></text>
        </g>
        <g >
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (250,000 samples, 0.10%)</title><rect x="631.0" y="181" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
            <text  x="633.99" y="191.5" ></text>
        </g>
        <g >
            <title>ArrayStream&lt;UserInfo&gt;::Filter (49,500,000 samples, 20.00%)</title><rect x="195.9" y="245" width="236.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
            <text  x="198.94" y="255.5" >ArrayStream&lt;UserInfo&gt;::Filter</text>
        </g>
        <g >
            <title>std::move&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&gt; (250,000 samples, 0.10%)</title><rect x="726.3" y="229" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
            <text  x="729.34" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (250,000 samples, 0.10%)</title><rect x="946.8" y="133" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="949.85" y="143.5" ></text>
        </g>
        <g >
            <title>test (500,000 samples, 0.20%)</title><rect x="285.3" y="213" width="2.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
            <text  x="288.33" y="223.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (500,000 samples, 0.20%)</title><rect x="1063.7" y="117" width="2.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="1066.66" y="127.5" ></text>
        </g>
        <g >
            <title>std::_Function_handler&lt;bool  (250,000 samples, 0.10%)</title><rect x="248.4" y="229" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
            <text  x="251.38" y="239.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo*, UserInfo&gt; (250,000 samples, 0.10%)</title><rect x="428.4" y="213" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="431.36" y="223.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::assign (1,000,000 samples, 0.40%)</title><rect x="570.2" y="133" width="4.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
            <text  x="573.20" y="143.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2,750,000 samples, 1.11%)</title><rect x="1019.6" y="69" width="13.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="1022.56" y="79.5" ></text>
        </g>
        <g >
            <title>std::move_iterator&lt;UserInfo*&gt;::base (500,000 samples, 0.20%)</title><rect x="341.4" y="117" width="2.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
            <text  x="344.35" y="127.5" ></text>
        </g>
        <g >
            <title>__memmove_avx_unaligned_erms (750,000 samples, 0.30%)</title><rect x="849.1" y="149" width="3.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
            <text  x="852.11" y="159.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::begin (250,000 samples, 0.10%)</title><rect x="900.4" y="245" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
            <text  x="903.36" y="255.5" ></text>
        </g>
        <g >
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;, UserInfo*&gt; (25,000,000 samples, 10.10%)</title><rect x="60.1" y="181" width="119.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
            <text  x="63.06" y="191.5" >std::__uniniti..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (500,000 samples, 0.20%)</title><rect x="1043.4" y="85" width="2.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="1046.39" y="95.5" ></text>
        </g>
        <g >
            <title>std::distance&lt;char*&gt; (1,750,000 samples, 0.71%)</title><rect x="1035.1" y="69" width="8.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
            <text  x="1038.05" y="79.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::~_Vector_base (500,000 samples, 0.20%)</title><rect x="429.6" y="213" width="2.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
            <text  x="432.56" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::_Base_manager&lt;test (500,000 samples, 0.20%)</title><rect x="886.1" y="213" width="2.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
            <text  x="889.06" y="223.5" ></text>
        </g>
        <g >
            <title>cfree@GLIBC_2.2.5 (250,000 samples, 0.10%)</title><rect x="1163.8" y="181" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
            <text  x="1166.78" y="191.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::allocator&lt;UserInfo&gt;&amp;&gt; (250,000 samples, 0.10%)</title><rect x="229.3" y="181" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
            <text  x="232.31" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (750,000 samples, 0.30%)</title><rect x="510.6" y="117" width="3.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="513.61" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3,250,000 samples, 1.31%)</title><rect x="843.2" y="165" width="15.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
            <text  x="846.15" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3,500,000 samples, 1.41%)</title><rect x="765.7" y="213" width="16.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
            <text  x="768.68" y="223.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (250,000 samples, 0.10%)</title><rect x="591.7" y="197" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
            <text  x="594.66" y="207.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (500,000 samples, 0.20%)</title><rect x="365.2" y="117" width="2.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
            <text  x="368.19" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (750,000 samples, 0.30%)</title><rect x="865.8" y="229" width="3.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="868.80" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4,750,000 samples, 1.92%)</title><rect x="760.9" y="229" width="22.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
            <text  x="763.91" y="239.5" >s..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1,250,000 samples, 0.51%)</title><rect x="361.6" y="133" width="6.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
            <text  x="364.62" y="143.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::operator++ (750,000 samples, 0.30%)</title><rect x="235.3" y="229" width="3.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
            <text  x="238.27" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2,750,000 samples, 1.11%)</title><rect x="134.0" y="53" width="13.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
            <text  x="136.96" y="63.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::operator!=&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt; (1,750,000 samples, 0.71%)</title><rect x="238.8" y="229" width="8.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
            <text  x="241.85" y="239.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocator (250,000 samples, 0.10%)</title><rect x="467.7" y="181" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="470.70" y="191.5" ></text>
        </g>
        <g >
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;UserInfo*&gt; (9,000,000 samples, 3.64%)</title><rect x="1087.5" y="197" width="42.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
            <text  x="1090.49" y="207.5" >std:..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.10%)</title><rect x="371.2" y="69" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="374.15" y="79.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (500,000 samples, 0.20%)</title><rect x="1165.0" y="213" width="2.4" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
            <text  x="1167.97" y="223.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::operator++ (500,000 samples, 0.20%)</title><rect x="472.5" y="229" width="2.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
            <text  x="475.46" y="239.5" ></text>
        </g>
        <g >
            <title>std::__distance&lt;char*&gt; (500,000 samples, 0.20%)</title><rect x="1041.0" y="53" width="2.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
            <text  x="1044.01" y="63.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::~vector (18,000,000 samples, 7.27%)</title><rect x="639.3" y="229" width="85.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
            <text  x="642.33" y="239.5" >std::vecto..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3,250,000 samples, 1.31%)</title><rect x="368.8" y="101" width="15.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="371.77" y="111.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;UserInfo&gt;::allocator (250,000 samples, 0.10%)</title><rect x="11.2" y="261" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
            <text  x="14.19" y="271.5" ></text>
        </g>
        <g >
            <title>std::_Function_handler&lt;bool  (5,250,000 samples, 2.12%)</title><rect x="259.1" y="213" width="25.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
            <text  x="262.11" y="223.5" >s..</text>
        </g>
        <g >
            <title>std::initializer_list&lt;UserInfo&gt;::size (250,000 samples, 0.10%)</title><rect x="909.9" y="229" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
            <text  x="912.90" y="239.5" ></text>
        </g>
        <g >
            <title>std::__iterator_category&lt;char*&gt; (250,000 samples, 0.10%)</title><rect x="1033.9" y="69" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
            <text  x="1036.86" y="79.5" ></text>
        </g>
        <g >
            <title>_dl_lookup_symbol_x (250,000 samples, 0.10%)</title><rect x="1168.5" y="261" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
            <text  x="1171.55" y="271.5" ></text>
        </g>
        <g >
            <title>std::__make_move_if_noexcept_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; &gt; (250,000 samples, 0.10%)</title><rect x="597.6" y="213" width="1.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
            <text  x="600.62" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1,250,000 samples, 0.51%)</title><rect x="461.7" y="181" width="6.0" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
            <text  x="464.74" y="191.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::begin (500,000 samples, 0.20%)</title><rect x="287.7" y="229" width="2.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
            <text  x="290.72" y="239.5" ></text>
        </g>
        <g >
            <title>std::function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (3,500,000 samples, 1.41%)</title><rect x="882.5" y="245" width="16.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
            <text  x="885.48" y="255.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (250,000 samples, 0.10%)</title><rect x="174.5" y="117" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="177.48" y="127.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (500,000 samples, 0.20%)</title><rect x="578.5" y="149" width="2.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
            <text  x="581.55" y="159.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (250,000 samples, 0.10%)</title><rect x="752.6" y="213" width="1.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
            <text  x="755.57" y="223.5" ></text>
        </g>
        <g >
            <title>std::addressof&lt;char const&gt; (250,000 samples, 0.10%)</title><rect x="1154.2" y="85" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
            <text  x="1157.24" y="95.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char const*&gt;::pointer_to (500,000 samples, 0.20%)</title><rect x="483.2" y="165" width="2.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
            <text  x="486.19" y="175.5" ></text>
        </g>
        <g >
            <title>std::__make_move_if_noexcept_iterator&lt;UserInfo, std::move_iterator&lt;UserInfo*&gt; &gt; (750,000 samples, 0.30%)</title><rect x="325.9" y="181" width="3.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
            <text  x="328.86" y="191.5" ></text>
        </g>
        <g >
            <title>std::swap&lt;UserInfo*&gt; (2,000,000 samples, 0.81%)</title><rect x="215.0" y="165" width="9.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
            <text  x="218.01" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4,500,000 samples, 1.82%)</title><rect x="1106.6" y="133" width="21.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
            <text  x="1109.57" y="143.5" >s..</text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::vector (750,000 samples, 0.30%)</title><rect x="424.8" y="229" width="3.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
            <text  x="427.79" y="239.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::begin (250,000 samples, 0.10%)</title><rect x="180.4" y="213" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
            <text  x="183.44" y="223.5" ></text>
        </g>
        <g >
            <title>std::distance&lt;char*&gt; (500,000 samples, 0.20%)</title><rect x="517.8" y="117" width="2.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
            <text  x="520.76" y="127.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_deallocate (750,000 samples, 0.30%)</title><rect x="1136.4" y="213" width="3.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
            <text  x="1139.36" y="223.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (250,000 samples, 0.10%)</title><rect x="569.0" y="133" width="1.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
            <text  x="572.01" y="143.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;UserInfo&gt;::allocator (500,000 samples, 0.20%)</title><rect x="39.8" y="181" width="2.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
            <text  x="42.80" y="191.5" ></text>
        </g>
        <g >
            <title>std::__distance&lt;char*&gt; (250,000 samples, 0.10%)</title><rect x="148.3" y="69" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
            <text  x="151.26" y="79.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;UserInfo&gt; &gt;::select_on_container_copy_construction (750,000 samples, 0.30%)</title><rect x="38.6" y="197" width="3.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
            <text  x="41.61" y="207.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char const*&gt;::pointer_to (250,000 samples, 0.10%)</title><rect x="781.2" y="181" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
            <text  x="784.17" y="191.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::~allocator@plt (250,000 samples, 0.10%)</title><rect x="782.4" y="213" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
            <text  x="785.36" y="223.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (1,500,000 samples, 0.61%)</title><rect x="621.5" y="229" width="7.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
            <text  x="624.45" y="239.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocator (250,000 samples, 0.10%)</title><rect x="741.8" y="181" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="744.84" y="191.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::__normal_iterator (500,000 samples, 0.20%)</title><rect x="185.2" y="197" width="2.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
            <text  x="188.21" y="207.5" ></text>
        </g>
        <g >
            <title>std::forward&lt;UserInfo const&amp;&gt; (250,000 samples, 0.10%)</title><rect x="1073.2" y="165" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
            <text  x="1076.19" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (750,000 samples, 0.30%)</title><rect x="514.2" y="117" width="3.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="517.18" y="127.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_check_len (250,000 samples, 0.10%)</title><rect x="296.1" y="213" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
            <text  x="299.06" y="223.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;UserInfo&gt;::~allocator (250,000 samples, 0.10%)</title><rect x="1139.9" y="213" width="1.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
            <text  x="1142.94" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (500,000 samples, 0.20%)</title><rect x="753.8" y="213" width="2.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
            <text  x="756.76" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_allocate (250,000 samples, 0.10%)</title><rect x="293.7" y="213" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="296.68" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1,000,000 samples, 0.40%)</title><rect x="623.8" y="197" width="4.8" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
            <text  x="626.84" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo&gt; (6,750,000 samples, 2.73%)</title><rect x="1095.8" y="181" width="32.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="1098.84" y="191.5" >st..</text>
        </g>
        <g >
            <title>free@plt (250,000 samples, 0.10%)</title><rect x="719.2" y="165" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
            <text  x="722.19" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_impl::~_Vector_impl (750,000 samples, 0.30%)</title><rect x="721.6" y="197" width="3.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
            <text  x="724.58" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (250,000 samples, 0.10%)</title><rect x="390.2" y="133" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="393.22" y="143.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (500,000 samples, 0.20%)</title><rect x="862.2" y="197" width="2.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="865.22" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Construct&lt;UserInfo, UserInfo const&amp;&gt; (28,750,000 samples, 11.62%)</title><rect x="934.9" y="165" width="137.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
            <text  x="937.93" y="175.5" >std::_Construct&lt;U..</text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char const*&gt;::pointer_to (500,000 samples, 0.20%)</title><rect x="1153.1" y="101" width="2.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
            <text  x="1156.05" y="111.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocator (750,000 samples, 0.30%)</title><rect x="625.0" y="181" width="3.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="628.03" y="191.5" ></text>
        </g>
        <g >
            <title>std::function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (8,250,000 samples, 3.33%)</title><rect x="485.6" y="229" width="39.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
            <text  x="488.58" y="239.5" >std..</text>
        </g>
        <g >
            <title>std::allocator&lt;UserInfo&gt;::~allocator (250,000 samples, 0.10%)</title><rect x="12.4" y="261" width="1.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
            <text  x="15.38" y="271.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (250,000 samples, 0.10%)</title><rect x="697.7" y="85" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="700.74" y="95.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (1,000,000 samples, 0.40%)</title><rect x="1160.2" y="213" width="4.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
            <text  x="1163.20" y="223.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;UserInfo&gt;::~new_allocator (500,000 samples, 0.20%)</title><rect x="722.8" y="165" width="2.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
            <text  x="725.77" y="175.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;UserInfo&gt;::allocate (250,000 samples, 0.10%)</title><rect x="921.8" y="181" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
            <text  x="924.82" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (500,000 samples, 0.20%)</title><rect x="1153.1" y="117" width="2.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="1156.05" y="127.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::allocator (500,000 samples, 0.20%)</title><rect x="172.1" y="117" width="2.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
            <text  x="175.10" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4,000,000 samples, 1.62%)</title><rect x="679.9" y="117" width="19.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
            <text  x="682.86" y="127.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (5,750,000 samples, 2.32%)</title><rect x="1141.1" y="245" width="27.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
            <text  x="1144.13" y="255.5" >s..</text>
        </g>
        <g >
            <title>std::swap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1,500,000 samples, 0.61%)</title><rect x="733.5" y="181" width="7.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
            <text  x="736.49" y="191.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::allocator (250,000 samples, 0.10%)</title><rect x="576.2" y="149" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
            <text  x="579.16" y="159.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_deallocate (250,000 samples, 0.10%)</title><rect x="294.9" y="213" width="1.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
            <text  x="297.87" y="223.5" ></text>
        </g>
        <g >
            <title>std::move&lt;UserInfo*&amp;&gt; (750,000 samples, 0.30%)</title><rect x="221.0" y="149" width="3.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
            <text  x="223.97" y="159.5" ></text>
        </g>
        <g >
            <title>std::max&lt;unsigned long&gt; (250,000 samples, 0.10%)</title><rect x="399.8" y="181" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
            <text  x="402.76" y="191.5" ></text>
        </g>
        <g >
            <title>std::__distance&lt;char*&gt; (250,000 samples, 0.10%)</title><rect x="383.1" y="69" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
            <text  x="386.07" y="79.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (250,000 samples, 0.10%)</title><rect x="575.0" y="149" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
            <text  x="577.97" y="159.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocator (250,000 samples, 0.10%)</title><rect x="466.5" y="165" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="469.51" y="175.5" ></text>
        </g>
        <g >
            <title>std::operator!=&lt;UserInfo*&gt; (250,000 samples, 0.10%)</title><rect x="350.9" y="149" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
            <text  x="353.89" y="159.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (24,750,000 samples, 10.00%)</title><rect x="949.2" y="133" width="118.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
            <text  x="952.23" y="143.5" >std::__cxx11::..</text>
        </g>
        <g >
            <title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&amp;&gt; (250,000 samples, 0.10%)</title><rect x="739.5" y="165" width="1.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
            <text  x="742.45" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (250,000 samples, 0.10%)</title><rect x="634.6" y="197" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
            <text  x="637.57" y="207.5" ></text>
        </g>
        <g >
            <title>std::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1,000,000 samples, 0.40%)</title><rect x="614.3" y="149" width="4.8" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
            <text  x="617.30" y="159.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_allocate (1,250,000 samples, 0.51%)</title><rect x="917.1" y="213" width="5.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="920.05" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_allocate (750,000 samples, 0.30%)</title><rect x="319.9" y="197" width="3.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="322.90" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (250,000 samples, 0.10%)</title><rect x="443.9" y="181" width="1.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
            <text  x="446.86" y="191.5" ></text>
        </g>
        <g >
            <title>std::addressof&lt;char&gt; (500,000 samples, 0.20%)</title><rect x="867.0" y="197" width="2.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
            <text  x="869.99" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::_Base_manager&lt;test (250,000 samples, 0.10%)</title><rect x="878.9" y="213" width="1.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
            <text  x="881.91" y="223.5" ></text>
        </g>
        <g >
            <title>std::__uninitialized_move_if_noexcept_a&lt;UserInfo*, UserInfo*, std::allocator&lt;UserInfo&gt; &gt; (6,000,000 samples, 2.42%)</title><rect x="323.5" y="197" width="28.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
            <text  x="326.47" y="207.5" >st..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (15,000,000 samples, 6.06%)</title><rect x="974.3" y="117" width="71.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="977.26" y="127.5" >std::__c..</text>
        </g>
        <g >
            <title>std::_Any_data::_M_access&lt;test (1,000,000 samples, 0.40%)</title><rect x="273.4" y="181" width="4.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
            <text  x="276.41" y="191.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (2,500,000 samples, 1.01%)</title><rect x="1156.6" y="229" width="11.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
            <text  x="1159.63" y="239.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_check_len (5,250,000 samples, 2.12%)</title><rect x="397.4" y="197" width="25.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
            <text  x="400.37" y="207.5" >s..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1,250,000 samples, 0.51%)</title><rect x="374.7" y="85" width="6.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="377.73" y="95.5" ></text>
        </g>
        <g >
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1,500,000 samples, 0.61%)</title><rect x="1149.5" y="197" width="7.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
            <text  x="1152.47" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_get_Tp_allocator (250,000 samples, 0.10%)</title><rect x="31.5" y="229" width="1.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
            <text  x="34.45" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2,250,000 samples, 0.91%)</title><rect x="1020.7" y="53" width="10.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
            <text  x="1023.75" y="63.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (1,000,000 samples, 0.40%)</title><rect x="586.9" y="181" width="4.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
            <text  x="589.89" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (500,000 samples, 0.20%)</title><rect x="522.5" y="165" width="2.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
            <text  x="525.53" y="175.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::assign (250,000 samples, 0.10%)</title><rect x="373.5" y="69" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
            <text  x="376.54" y="79.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::__normal_iterator (250,000 samples, 0.10%)</title><rect x="288.9" y="213" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
            <text  x="291.91" y="223.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;UserInfo&gt; (500,000 samples, 0.20%)</title><rect x="1128.0" y="181" width="2.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
            <text  x="1131.02" y="191.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::operator-&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt; (250,000 samples, 0.10%)</title><rect x="292.5" y="213" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
            <text  x="295.48" y="223.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::base (250,000 samples, 0.10%)</title><rect x="246.0" y="213" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
            <text  x="249.00" y="223.5" ></text>
        </g>
        <g >
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1,000,000 samples, 0.40%)</title><rect x="614.3" y="165" width="4.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
            <text  x="617.30" y="175.5" ></text>
        </g>
        <g >
            <title>std::move&lt;UserInfo*&amp;&gt; (750,000 samples, 0.30%)</title><rect x="211.4" y="165" width="3.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
            <text  x="214.43" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo&gt; (9,750,000 samples, 3.94%)</title><rect x="656.0" y="165" width="46.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="659.02" y="175.5" >std:..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.10%)</title><rect x="988.6" y="69" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="991.57" y="79.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_base (4,750,000 samples, 1.92%)</title><rect x="207.9" y="197" width="22.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
            <text  x="210.86" y="207.5" >s..</text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (250,000 samples, 0.10%)</title><rect x="619.1" y="197" width="1.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
            <text  x="622.07" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,000,000 samples, 0.40%)</title><rect x="374.7" y="69" width="4.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
            <text  x="377.73" y="79.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_base (1,500,000 samples, 0.61%)</title><rect x="44.6" y="213" width="7.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
            <text  x="47.57" y="223.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (500,000 samples, 0.20%)</title><rect x="811.0" y="229" width="2.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
            <text  x="813.97" y="239.5" ></text>
        </g>
        <g >
            <title>dl_main (250,000 samples, 0.10%)</title><rect x="1168.5" y="277" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
            <text  x="1171.55" y="287.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::copy (250,000 samples, 0.10%)</title><rect x="1031.5" y="53" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="1034.47" y="63.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::~_Function_base (500,000 samples, 0.20%)</title><rect x="880.1" y="229" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
            <text  x="883.10" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (250,000 samples, 0.10%)</title><rect x="372.3" y="69" width="1.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
            <text  x="375.34" y="79.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (250,000 samples, 0.10%)</title><rect x="1067.2" y="133" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
            <text  x="1070.23" y="143.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19,000,000 samples, 7.68%)</title><rect x="85.1" y="133" width="90.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
            <text  x="88.09" y="143.5" >std::__cxx..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (500,000 samples, 0.20%)</title><rect x="1069.6" y="149" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
            <text  x="1072.62" y="159.5" ></text>
        </g>
        <g >
            <title>UserInfo::UserInfo (27,250,000 samples, 11.01%)</title><rect x="939.7" y="149" width="129.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
            <text  x="942.70" y="159.5" >UserInfo::UserInfo</text>
        </g>
        <g >
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;UserInfo*&gt;, UserInfo*&gt; (4,000,000 samples, 1.62%)</title><rect x="331.8" y="149" width="19.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
            <text  x="334.82" y="159.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_impl::_Vector_impl (250,000 samples, 0.10%)</title><rect x="427.2" y="213" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
            <text  x="430.17" y="223.5" ></text>
        </g>
        <g >
            <title>cfree@GLIBC_2.2.5 (250,000 samples, 0.10%)</title><rect x="718.0" y="165" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
            <text  x="721.00" y="175.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&amp;&gt; (500,000 samples, 0.20%)</title><rect x="731.1" y="181" width="2.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
            <text  x="734.11" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6,500,000 samples, 2.63%)</title><rect x="549.9" y="165" width="31.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
            <text  x="552.94" y="175.5" >st..</text>
        </g>
        <g >
            <title>UserInfo::UserInfo (8,500,000 samples, 3.43%)</title><rect x="353.3" y="165" width="40.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
            <text  x="356.27" y="175.5" >Use..</text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::length (250,000 samples, 0.10%)</title><rect x="870.6" y="229" width="1.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
            <text  x="873.57" y="239.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (4,250,000 samples, 1.72%)</title><rect x="727.5" y="229" width="20.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
            <text  x="730.54" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,500,000 samples, 0.61%)</title><rect x="478.4" y="197" width="7.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
            <text  x="481.42" y="207.5" ></text>
        </g>
        <g >
            <title>stream_api_main (247,500,000 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
            <text  x="13.00" y="335.5" >stream_api_main</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (500,000 samples, 0.20%)</title><rect x="391.4" y="133" width="2.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="394.41" y="143.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_get_Tp_allocator (250,000 samples, 0.10%)</title><rect x="210.2" y="181" width="1.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
            <text  x="213.24" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (500,000 samples, 0.20%)</title><rect x="155.4" y="117" width="2.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="158.41" y="127.5" ></text>
        </g>
        <g >
            <title>std::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (750,000 samples, 0.30%)</title><rect x="615.5" y="133" width="3.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
            <text  x="618.49" y="143.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (5,750,000 samples, 2.32%)</title><rect x="442.7" y="197" width="27.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="445.67" y="207.5" >s..</text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_realloc_insert&lt;UserInfo const&amp;&gt; (26,500,000 samples, 10.71%)</title><rect x="297.3" y="213" width="126.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
            <text  x="300.25" y="223.5" >std::vector&lt;Use..</text>
        </g>
        <g >
            <title>std::addressof&lt;char const&gt; (500,000 samples, 0.20%)</title><rect x="552.3" y="101" width="2.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
            <text  x="555.32" y="111.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;UserInfo&gt; (250,000 samples, 0.10%)</title><rect x="702.5" y="165" width="1.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
            <text  x="705.51" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (13,750,000 samples, 5.56%)</title><rect x="977.8" y="85" width="65.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="980.84" y="95.5" >std::__..</text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::push_back (28,000,000 samples, 11.31%)</title><rect x="291.3" y="229" width="133.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
            <text  x="294.29" y="239.5" >std::vector&lt;User..</text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;UserInfo&gt; &gt;::construct&lt;UserInfo, UserInfo const&amp;&gt; (9,250,000 samples, 3.74%)</title><rect x="352.1" y="197" width="44.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
            <text  x="355.08" y="207.5" >std:..</text>
        </g>
        <g >
            <title>std::swap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (3,000,000 samples, 1.21%)</title><rect x="447.4" y="165" width="14.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
            <text  x="450.43" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;UserInfo*&gt; (250,000 samples, 0.10%)</title><rect x="318.7" y="181" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
            <text  x="321.71" y="191.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate (750,000 samples, 0.30%)</title><rect x="604.8" y="181" width="3.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
            <text  x="607.77" y="191.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::begin (1,000,000 samples, 0.40%)</title><rect x="526.1" y="229" width="4.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
            <text  x="529.10" y="239.5" ></text>
        </g>
        <g >
            <title>std::forward&lt;UserInfo const&amp;&gt; (250,000 samples, 0.10%)</title><rect x="284.1" y="213" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
            <text  x="287.14" y="223.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;UserInfo&gt;::new_allocator (500,000 samples, 0.20%)</title><rect x="225.7" y="149" width="2.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
            <text  x="228.74" y="159.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::copy (250,000 samples, 0.10%)</title><rect x="379.5" y="69" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="382.49" y="79.5" ></text>
        </g>
        <g >
            <title>std::operator==&lt;UserInfo*&gt; (1,250,000 samples, 0.51%)</title><rect x="343.7" y="117" width="6.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
            <text  x="346.74" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6,500,000 samples, 2.63%)</title><rect x="493.9" y="181" width="31.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
            <text  x="496.92" y="191.5" >st..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1,250,000 samples, 0.51%)</title><rect x="1006.4" y="53" width="6.0" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
            <text  x="1009.44" y="63.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (250,000 samples, 0.10%)</title><rect x="701.3" y="149" width="1.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
            <text  x="704.31" y="159.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1,500,000 samples, 0.61%)</title><rect x="478.4" y="229" width="7.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
            <text  x="481.42" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3,250,000 samples, 1.31%)</title><rect x="132.8" y="69" width="15.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="135.77" y="79.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,500,000 samples, 0.61%)</title><rect x="159.0" y="117" width="7.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="161.99" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (17,500,000 samples, 7.07%)</title><rect x="788.3" y="245" width="83.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
            <text  x="791.32" y="255.5" >std::__cx..</text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char const*&gt;::pointer_to (250,000 samples, 0.10%)</title><rect x="780.0" y="165" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
            <text  x="782.98" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Any_data::_M_access (250,000 samples, 0.10%)</title><rect x="492.7" y="165" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
            <text  x="495.73" y="175.5" ></text>
        </g>
        <g >
            <title>UserInfo::~UserInfo (6,250,000 samples, 2.53%)</title><rect x="1098.2" y="165" width="29.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
            <text  x="1101.22" y="175.5" >Us..</text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_impl::_Vector_impl (250,000 samples, 0.10%)</title><rect x="426.0" y="197" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
            <text  x="428.98" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Construct&lt;UserInfo, UserInfo const&amp;&gt; (20,750,000 samples, 8.38%)</title><rect x="80.3" y="165" width="99.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
            <text  x="83.32" y="175.5" >std::_Const..</text>
        </g>
        <g >
            <title>std::function&lt;bool  (2,000,000 samples, 0.81%)</title><rect x="872.9" y="245" width="9.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
            <text  x="875.95" y="255.5" ></text>
        </g>
        <g >
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;UserInfo*&gt; (12,250,000 samples, 4.95%)</title><rect x="645.3" y="181" width="58.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
            <text  x="648.29" y="191.5" >std::_..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,000,000 samples, 0.81%)</title><rect x="554.7" y="149" width="9.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="557.71" y="159.5" ></text>
        </g>
        <g >
            <title>std::distance&lt;char*&gt; (750,000 samples, 0.30%)</title><rect x="380.7" y="85" width="3.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
            <text  x="383.69" y="95.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::_Base_manager&lt;test (3,000,000 samples, 1.21%)</title><rect x="268.6" y="197" width="14.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
            <text  x="271.65" y="207.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;UserInfo&gt; &gt;::deallocate (1,750,000 samples, 0.71%)</title><rect x="713.2" y="181" width="8.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
            <text  x="716.23" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (250,000 samples, 0.10%)</title><rect x="83.9" y="133" width="1.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
            <text  x="86.90" y="143.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (750,000 samples, 0.30%)</title><rect x="632.2" y="213" width="3.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
            <text  x="635.18" y="223.5" ></text>
        </g>
        <g >
            <title>std::distance&lt;char const*&gt; (750,000 samples, 0.30%)</title><rect x="858.6" y="181" width="3.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
            <text  x="861.65" y="191.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::_Base_manager&lt;test (1,250,000 samples, 0.51%)</title><rect x="488.0" y="197" width="5.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
            <text  x="490.96" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.10%)</title><rect x="551.1" y="133" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="554.13" y="143.5" ></text>
        </g>
        <g >
            <title>std::_Any_data::_M_access&lt;test (250,000 samples, 0.10%)</title><rect x="898.0" y="181" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
            <text  x="900.98" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,750,000 samples, 1.11%)</title><rect x="769.3" y="197" width="13.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
            <text  x="772.25" y="207.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;UserInfo&gt; &gt;::allocate (1,000,000 samples, 0.40%)</title><rect x="918.2" y="197" width="4.8" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
            <text  x="921.24" y="207.5" ></text>
        </g>
        <g >
            <title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;, UserInfo*&gt; (26,000,000 samples, 10.51%)</title><rect x="55.3" y="197" width="124.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
            <text  x="58.29" y="207.5" >std::uninitiali..</text>
        </g>
        <g >
            <title>std::move&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&gt; (250,000 samples, 0.10%)</title><rect x="524.9" y="229" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
            <text  x="527.91" y="239.5" ></text>
        </g>
        <g >
            <title>std::forward&lt;UserInfo const&amp;&gt; (500,000 samples, 0.20%)</title><rect x="393.8" y="165" width="2.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
            <text  x="396.80" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Any_data::_M_access (250,000 samples, 0.10%)</title><rect x="878.9" y="197" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
            <text  x="881.91" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::_Base_manager&lt;test (250,000 samples, 0.10%)</title><rect x="878.9" y="229" width="1.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
            <text  x="881.91" y="239.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::operator!=&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt; (750,000 samples, 0.30%)</title><rect x="474.8" y="229" width="3.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
            <text  x="477.85" y="239.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~allocator (250,000 samples, 0.10%)</title><rect x="1167.4" y="213" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
            <text  x="1170.35" y="223.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::size (2,250,000 samples, 0.91%)</title><rect x="530.9" y="229" width="10.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
            <text  x="533.87" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (750,000 samples, 0.30%)</title><rect x="386.6" y="133" width="3.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="389.65" y="143.5" ></text>
        </g>
        <g >
            <title>UserInfo::~UserInfo (5,750,000 samples, 2.32%)</title><rect x="756.1" y="245" width="27.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
            <text  x="759.14" y="255.5" >U..</text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::end (250,000 samples, 0.10%)</title><rect x="423.6" y="213" width="1.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
            <text  x="426.60" y="223.5" ></text>
        </g>
        <g >
            <title>std::addressof&lt;char const&gt; (250,000 samples, 0.10%)</title><rect x="778.8" y="165" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
            <text  x="781.79" y="175.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::max_size (500,000 samples, 0.20%)</title><rect x="400.9" y="181" width="2.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
            <text  x="403.95" y="191.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::base (750,000 samples, 0.30%)</title><rect x="230.5" y="229" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
            <text  x="233.51" y="239.5" ></text>
        </g>
        <g >
            <title>malloc (2,750,000 samples, 1.11%)</title><rect x="1176.9" y="309" width="13.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
            <text  x="1179.89" y="319.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (4,000,000 samples, 1.62%)</title><rect x="1108.9" y="117" width="19.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
            <text  x="1111.95" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (250,000 samples, 0.10%)</title><rect x="385.5" y="133" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
            <text  x="388.45" y="143.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,250,000 samples, 0.91%)</title><rect x="1052.9" y="117" width="10.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="1055.93" y="127.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (1,500,000 samples, 0.61%)</title><rect x="601.2" y="197" width="7.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
            <text  x="604.19" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,000,000 samples, 0.40%)</title><rect x="772.8" y="181" width="4.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="775.83" y="191.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (500,000 samples, 0.20%)</title><rect x="499.9" y="165" width="2.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="502.88" y="175.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::allocator (250,000 samples, 0.10%)</title><rect x="360.4" y="117" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
            <text  x="363.42" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (250,000 samples, 0.10%)</title><rect x="787.1" y="245" width="1.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
            <text  x="790.13" y="255.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3,000,000 samples, 1.21%)</title><rect x="684.6" y="101" width="14.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
            <text  x="687.63" y="111.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::allocator (500,000 samples, 0.20%)</title><rect x="963.5" y="101" width="2.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
            <text  x="966.54" y="111.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;UserInfo&gt;::new_allocator (250,000 samples, 0.10%)</title><rect x="783.6" y="245" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
            <text  x="786.56" y="255.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::assign (750,000 samples, 0.30%)</title><rect x="129.2" y="53" width="3.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
            <text  x="132.19" y="63.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::__normal_iterator (250,000 samples, 0.10%)</title><rect x="422.4" y="181" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
            <text  x="425.40" y="191.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char*&gt;::pointer_to (1,500,000 samples, 0.61%)</title><rect x="1056.5" y="101" width="7.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="1059.51" y="111.5" ></text>
        </g>
        <g >
            <title>std::addressof&lt;char&gt; (1,000,000 samples, 0.40%)</title><rect x="559.5" y="117" width="4.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
            <text  x="562.47" y="127.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (250,000 samples, 0.10%)</title><rect x="360.4" y="133" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="363.42" y="143.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_range_initialize&lt;UserInfo const*&gt; (36,250,000 samples, 14.65%)</title><rect x="911.1" y="229" width="172.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
            <text  x="914.09" y="239.5" >std::vector&lt;UserInfo, ..</text>
        </g>
        <g >
            <title>std::addressof&lt;char&gt; (250,000 samples, 0.10%)</title><rect x="521.3" y="133" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
            <text  x="524.33" y="143.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9,000,000 samples, 3.64%)</title><rect x="819.3" y="197" width="42.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
            <text  x="822.31" y="207.5" >std:..</text>
        </g>
        <g >
            <title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (500,000 samples, 0.20%)</title><rect x="595.2" y="213" width="2.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
            <text  x="598.23" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_deallocate (250,000 samples, 0.10%)</title><rect x="429.6" y="197" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
            <text  x="432.56" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3,750,000 samples, 1.52%)</title><rect x="840.8" y="181" width="17.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="843.77" y="191.5" ></text>
        </g>
        <g >
            <title>do_lookup_x (250,000 samples, 0.10%)</title><rect x="1175.7" y="309" width="1.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
            <text  x="1178.70" y="319.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3,500,000 samples, 1.41%)</title><rect x="503.5" y="165" width="16.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="506.45" y="175.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::begin (250,000 samples, 0.10%)</title><rect x="422.4" y="197" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
            <text  x="425.40" y="207.5" ></text>
        </g>
        <g >
            <title>UserInfo::UserInfo (500,000 samples, 0.20%)</title><rect x="932.5" y="165" width="2.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
            <text  x="935.55" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7,750,000 samples, 3.13%)</title><rect x="356.8" y="149" width="37.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
            <text  x="359.85" y="159.5" >std..</text>
        </g>
        <g >
            <title>std::move&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&gt; (250,000 samples, 0.10%)</title><rect x="471.3" y="197" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
            <text  x="474.27" y="207.5" ></text>
        </g>
        <g >
            <title>std::__iterator_category&lt;char const*&gt; (250,000 samples, 0.10%)</title><rect x="861.0" y="165" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
            <text  x="864.03" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (500,000 samples, 0.20%)</title><rect x="552.3" y="133" width="2.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="555.32" y="143.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; &gt; (4,250,000 samples, 1.72%)</title><rect x="598.8" y="213" width="20.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
            <text  x="601.81" y="223.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (250,000 samples, 0.10%)</title><rect x="355.7" y="149" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="358.66" y="159.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.10%)</title><rect x="1151.9" y="133" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="1154.86" y="143.5" ></text>
        </g>
        <g >
            <title>std::function&lt;bool  (7,750,000 samples, 3.13%)</title><rect x="250.8" y="229" width="36.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
            <text  x="253.77" y="239.5" >std..</text>
        </g>
        <g >
            <title>std::swap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (250,000 samples, 0.10%)</title><rect x="744.2" y="197" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
            <text  x="747.22" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (250,000 samples, 0.10%)</title><rect x="948.0" y="133" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="951.04" y="143.5" ></text>
        </g>
        <g >
            <title>std::addressof&lt;char&gt; (750,000 samples, 0.30%)</title><rect x="1060.1" y="85" width="3.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
            <text  x="1063.08" y="95.5" ></text>
        </g>
        <g >
            <title>std::__distance&lt;UserInfo const*&gt; (1,500,000 samples, 0.61%)</title><rect x="1076.8" y="197" width="7.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
            <text  x="1079.77" y="207.5" ></text>
        </g>
        <g >
            <title>std::operator==&lt;UserInfo*&gt; (250,000 samples, 0.10%)</title><rect x="349.7" y="133" width="1.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
            <text  x="352.70" y="143.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3,750,000 samples, 1.52%)</title><rect x="367.6" y="133" width="17.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="370.58" y="143.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::~_Vector_base (4,250,000 samples, 1.72%)</title><rect x="704.9" y="213" width="20.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
            <text  x="707.89" y="223.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (6,750,000 samples, 2.73%)</title><rect x="548.7" y="181" width="32.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
            <text  x="551.75" y="191.5" >__..</text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::assign (1,500,000 samples, 0.61%)</title><rect x="1012.4" y="53" width="7.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
            <text  x="1015.40" y="63.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (750,000 samples, 0.30%)</title><rect x="551.1" y="149" width="3.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
            <text  x="554.13" y="159.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::_Base_manager&lt;test (500,000 samples, 0.20%)</title><rect x="880.1" y="213" width="2.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
            <text  x="883.10" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Any_data::_M_access&lt;test (250,000 samples, 0.10%)</title><rect x="895.6" y="197" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
            <text  x="898.60" y="207.5" ></text>
        </g>
        <g >
            <title>std::uninitialized_copy&lt;UserInfo const*, UserInfo*&gt; (31,500,000 samples, 12.73%)</title><rect x="924.2" y="197" width="150.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
            <text  x="927.20" y="207.5" >std::uninitialized_..</text>
        </g>
        <g >
            <title>test (6,500,000 samples, 2.63%)</title><rect x="493.9" y="197" width="31.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
            <text  x="496.92" y="207.5" >test</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (14,500,000 samples, 5.86%)</title><rect x="976.6" y="101" width="69.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
            <text  x="979.65" y="111.5" >std::__..</text>
        </g>
        <g >
            <title>UserInfo::~UserInfo (9,000,000 samples, 3.64%)</title><rect x="658.4" y="149" width="42.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
            <text  x="661.40" y="159.5" >User..</text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::~allocator@plt (250,000 samples, 0.10%)</title><rect x="1068.4" y="133" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
            <text  x="1071.42" y="143.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::allocator&lt;UserInfo&gt;&amp;&gt; (250,000 samples, 0.10%)</title><rect x="228.1" y="165" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
            <text  x="231.12" y="175.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::copy (500,000 samples, 0.20%)</title><rect x="1029.1" y="37" width="2.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="1032.09" y="47.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::~_Function_base (1,500,000 samples, 0.61%)</title><rect x="892.0" y="229" width="7.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
            <text  x="895.02" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1,000,000 samples, 0.40%)</title><rect x="969.5" y="117" width="4.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
            <text  x="972.49" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (250,000 samples, 0.10%)</title><rect x="521.3" y="165" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="524.33" y="175.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1,250,000 samples, 0.51%)</title><rect x="750.2" y="229" width="5.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
            <text  x="753.18" y="239.5" ></text>
        </g>
        <g >
            <title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;, UserInfo*, UserInfo&gt; (26,500,000 samples, 10.71%)</title><rect x="52.9" y="213" width="126.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
            <text  x="55.91" y="223.5" >std::__uninitia..</text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::copy (250,000 samples, 0.10%)</title><rect x="577.4" y="149" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="580.35" y="159.5" ></text>
        </g>
        <g >
            <title>std::move_iterator&lt;UserInfo*&gt;::base (500,000 samples, 0.20%)</title><rect x="347.3" y="101" width="2.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
            <text  x="350.31" y="111.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;UserInfo&gt; &gt;::max_size (500,000 samples, 0.20%)</title><rect x="400.9" y="165" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
            <text  x="403.95" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (3,500,000 samples, 1.41%)</title><rect x="503.5" y="149" width="16.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
            <text  x="506.45" y="159.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_base (250,000 samples, 0.10%)</title><rect x="426.0" y="213" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
            <text  x="428.98" y="223.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (500,000 samples, 0.20%)</title><rect x="943.3" y="133" width="2.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
            <text  x="946.27" y="143.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::copy (250,000 samples, 0.10%)</title><rect x="147.1" y="53" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="150.07" y="63.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3,250,000 samples, 1.31%)</title><rect x="504.6" y="133" width="15.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="507.65" y="143.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1,750,000 samples, 0.71%)</title><rect x="1148.3" y="229" width="8.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
            <text  x="1151.28" y="239.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;UserInfo&gt;, UserInfo&gt;::_S_select_on_copy (500,000 samples, 0.20%)</title><rect x="29.1" y="229" width="2.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
            <text  x="32.07" y="239.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char*&gt;::pointer_to (250,000 samples, 0.10%)</title><rect x="521.3" y="149" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="524.33" y="159.5" ></text>
        </g>
        <g >
            <title>operator delete (500,000 samples, 0.20%)</title><rect x="1136.4" y="181" width="2.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
            <text  x="1139.36" y="191.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_impl::~_Vector_impl (250,000 samples, 0.10%)</title><rect x="703.7" y="213" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
            <text  x="706.70" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_M_swap_data (250,000 samples, 0.10%)</title><rect x="745.4" y="213" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
            <text  x="748.41" y="223.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;char&gt; (250,000 samples, 0.10%)</title><rect x="563.1" y="101" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
            <text  x="566.05" y="111.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5,750,000 samples, 2.32%)</title><rect x="1100.6" y="149" width="27.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
            <text  x="1103.61" y="159.5" >s..</text>
        </g>
        <g >
            <title>std::forward&lt;UserInfo const&amp;&gt; (250,000 samples, 0.10%)</title><rect x="282.9" y="197" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
            <text  x="285.95" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (500,000 samples, 0.20%)</title><rect x="677.5" y="117" width="2.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
            <text  x="680.47" y="127.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::push_back (250,000 samples, 0.10%)</title><rect x="901.6" y="245" width="1.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
            <text  x="904.56" y="255.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_impl::_Vector_impl (250,000 samples, 0.10%)</title><rect x="51.7" y="213" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
            <text  x="54.72" y="223.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (6,750,000 samples, 2.73%)</title><rect x="440.3" y="213" width="32.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
            <text  x="443.28" y="223.5" >st..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,250,000 samples, 4.14%)</title><rect x="104.2" y="117" width="48.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="107.16" y="127.5" >std:..</text>
        </g>
        <g >
            <title>operator new (250,000 samples, 0.10%)</title><rect x="322.3" y="165" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="325.28" y="175.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::vector (34,250,000 samples, 13.84%)</title><rect x="32.6" y="229" width="163.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
            <text  x="35.65" y="239.5" >std::vector&lt;UserInfo,..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (250,000 samples, 0.10%)</title><rect x="157.8" y="117" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="160.80" y="127.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (250,000 samples, 0.10%)</title><rect x="631.0" y="197" width="1.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="633.99" y="207.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;UserInfo&gt;::allocator (500,000 samples, 0.20%)</title><rect x="225.7" y="165" width="2.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
            <text  x="228.74" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo*&gt; (9,000,000 samples, 3.64%)</title><rect x="1087.5" y="213" width="42.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
            <text  x="1090.49" y="223.5" >std:..</text>
        </g>
        <g >
            <title>std::max&lt;unsigned long&gt; (250,000 samples, 0.10%)</title><rect x="396.2" y="197" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
            <text  x="399.18" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo*, UserInfo&gt; (500,000 samples, 0.20%)</title><rect x="317.5" y="197" width="2.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="320.52" y="207.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::operator++ (250,000 samples, 0.10%)</title><rect x="55.3" y="181" width="1.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
            <text  x="58.29" y="191.5" ></text>
        </g>
        <g >
            <title>std::uninitialized_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1,750,000 samples, 0.71%)</title><rect x="610.7" y="181" width="8.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
            <text  x="613.73" y="191.5" ></text>
        </g>
        <g >
            <title>std::__distance&lt;char*&gt; (250,000 samples, 0.10%)</title><rect x="518.9" y="101" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
            <text  x="521.95" y="111.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::assign (500,000 samples, 0.20%)</title><rect x="511.8" y="101" width="2.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
            <text  x="514.80" y="111.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::allocator (250,000 samples, 0.10%)</title><rect x="869.4" y="229" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
            <text  x="872.37" y="239.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::size (4,000,000 samples, 1.62%)</title><rect x="403.3" y="181" width="19.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
            <text  x="406.33" y="191.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (250,000 samples, 0.10%)</title><rect x="825.3" y="181" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
            <text  x="828.27" y="191.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;test (1,000,000 samples, 0.40%)</title><rect x="278.2" y="181" width="4.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
            <text  x="281.18" y="191.5" ></text>
        </g>
        <g >
            <title>_int_free (250,000 samples, 0.10%)</title><rect x="1162.6" y="181" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
            <text  x="1165.59" y="191.5" ></text>
        </g>
        <g >
            <title>ArrayStream&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~ArrayStream (1,750,000 samples, 0.71%)</title><rect x="747.8" y="245" width="8.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
            <text  x="750.80" y="255.5" ></text>
        </g>
        <g >
            <title>std::operator!=&lt;UserInfo*&gt; (2,500,000 samples, 1.01%)</title><rect x="337.8" y="133" width="11.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
            <text  x="340.78" y="143.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (250,000 samples, 0.10%)</title><rect x="583.3" y="181" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
            <text  x="586.31" y="191.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;UserInfo&gt;::~allocator (250,000 samples, 0.10%)</title><rect x="179.3" y="213" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
            <text  x="182.25" y="223.5" ></text>
        </g>
        <g >
            <title>std::initializer_list&lt;UserInfo&gt;::begin (250,000 samples, 0.10%)</title><rect x="908.7" y="213" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
            <text  x="911.71" y="223.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (8,000,000 samples, 3.23%)</title><rect x="663.2" y="133" width="38.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
            <text  x="666.17" y="143.5" >std..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (9,500,000 samples, 3.84%)</title><rect x="107.7" y="101" width="45.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
            <text  x="110.74" y="111.5" >std:..</text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (250,000 samples, 0.10%)</title><rect x="439.1" y="213" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
            <text  x="442.09" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1,500,000 samples, 0.61%)</title><rect x="1149.5" y="213" width="7.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="1152.47" y="223.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (500,000 samples, 0.20%)</title><rect x="1153.1" y="133" width="2.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
            <text  x="1156.05" y="143.5" ></text>
        </g>
        <g >
            <title>operator delete@plt (250,000 samples, 0.10%)</title><rect x="1138.7" y="181" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
            <text  x="1141.75" y="191.5" ></text>
        </g>
        <g >
            <title>all (247,500,000 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
            <text  x="13.00" y="351.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::copy (250,000 samples, 0.10%)</title><rect x="378.3" y="53" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="381.30" y="63.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1,250,000 samples, 0.51%)</title><rect x="98.2" y="117" width="6.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
            <text  x="101.20" y="127.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::size (1,750,000 samples, 0.71%)</title><rect x="187.6" y="213" width="8.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
            <text  x="190.60" y="223.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::operator* (250,000 samples, 0.10%)</title><rect x="72.0" y="165" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
            <text  x="74.98" y="175.5" ></text>
        </g>
        <g >
            <title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;UserInfo*&gt;, UserInfo*, UserInfo&gt; (4,750,000 samples, 1.92%)</title><rect x="329.4" y="181" width="22.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
            <text  x="332.43" y="191.5" >s..</text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::end (1,250,000 samples, 0.51%)</title><rect x="181.6" y="213" width="6.0" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
            <text  x="184.64" y="223.5" ></text>
        </g>
        <g >
            <title>std::uninitialized_copy&lt;std::move_iterator&lt;UserInfo*&gt;, UserInfo*&gt; (4,500,000 samples, 1.82%)</title><rect x="330.6" y="165" width="21.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
            <text  x="333.63" y="175.5" >s..</text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (500,000 samples, 0.20%)</title><rect x="740.6" y="197" width="2.4" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
            <text  x="743.65" y="207.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;UserInfo&gt;::~allocator (750,000 samples, 0.30%)</title><rect x="721.6" y="181" width="3.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
            <text  x="724.58" y="191.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char*&gt;::pointer_to (250,000 samples, 0.10%)</title><rect x="392.6" y="117" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="395.61" y="127.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1,250,000 samples, 0.51%)</title><rect x="92.2" y="117" width="6.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="95.24" y="127.5" ></text>
        </g>
        <g >
            <title>std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::~vector (12,000,000 samples, 4.85%)</title><rect x="1083.9" y="245" width="57.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
            <text  x="1086.92" y="255.5" >std::v..</text>
        </g>
        <g >
            <title>__memmove_avx_unaligned_erms (500,000 samples, 0.20%)</title><rect x="375.9" y="53" width="2.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
            <text  x="378.92" y="63.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (500,000 samples, 0.20%)</title><rect x="153.0" y="117" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
            <text  x="156.03" y="127.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (250,000 samples, 0.10%)</title><rect x="103.0" y="101" width="1.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
            <text  x="105.97" y="111.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::base (250,000 samples, 0.10%)</title><rect x="316.3" y="181" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
            <text  x="319.32" y="191.5" ></text>
        </g>
        <g >
            <title>__libc_start_main (243,000,000 samples, 98.18%)</title><rect x="10.0" y="293" width="1158.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
            <text  x="13.00" y="303.5" >__libc_start_main</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (250,000 samples, 0.10%)</title><rect x="510.6" y="101" width="1.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
            <text  x="513.61" y="111.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (250,000 samples, 0.10%)</title><rect x="502.3" y="165" width="1.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
            <text  x="505.26" y="175.5" ></text>
        </g>
        <g >
            <title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (250,000 samples, 0.10%)</title><rect x="620.3" y="197" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
            <text  x="623.26" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (250,000 samples, 0.10%)</title><rect x="975.5" y="101" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="978.45" y="111.5" ></text>
        </g>
        <g >
            <title>std::__uninitialized_copy_a&lt;UserInfo const*, UserInfo*, UserInfo&gt; (31,750,000 samples, 12.83%)</title><rect x="923.0" y="213" width="151.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
            <text  x="926.01" y="223.5" >std::__uninitialize..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (750,000 samples, 0.30%)</title><rect x="827.7" y="165" width="3.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="830.66" y="175.5" ></text>
        </g>
        <g >
            <title>std::allocator&lt;char&gt;::~allocator (250,000 samples, 0.10%)</title><rect x="698.9" y="117" width="1.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
            <text  x="701.93" y="127.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::operator* (250,000 samples, 0.10%)</title><rect x="234.1" y="229" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
            <text  x="237.08" y="239.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.10%)</title><rect x="384.3" y="101" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="387.26" y="111.5" ></text>
        </g>
        <g >
            <title>std::addressof&lt;char&gt; (250,000 samples, 0.10%)</title><rect x="558.3" y="133" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
            <text  x="561.28" y="143.5" ></text>
        </g>
        <g >
            <title>__strlen_avx2 (2,500,000 samples, 1.01%)</title><rect x="799.1" y="229" width="11.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
            <text  x="802.05" y="239.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_allocate (250,000 samples, 0.10%)</title><rect x="907.5" y="229" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="910.52" y="239.5" ></text>
        </g>
        <g >
            <title>ArrayStream&lt;UserInfo&gt;::~ArrayStream (18,750,000 samples, 7.58%)</title><rect x="635.8" y="245" width="89.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
            <text  x="638.76" y="255.5" >ArrayStrea..</text>
        </g>
        <g >
            <title>std::allocator&lt;UserInfo&gt;::allocator (250,000 samples, 0.10%)</title><rect x="871.8" y="245" width="1.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
            <text  x="874.76" y="255.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;char&gt; (250,000 samples, 0.10%)</title><rect x="521.3" y="117" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
            <text  x="524.33" y="127.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__normal_iterator&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;::__normal_iterator (250,000 samples, 0.10%)</title><rect x="423.6" y="197" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
            <text  x="426.60" y="207.5" ></text>
        </g>
        <g >
            <title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (250,000 samples, 0.10%)</title><rect x="1066.0" y="117" width="1.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
            <text  x="1069.04" y="127.5" ></text>
        </g>
        <g >
            <title>std::char_traits&lt;char&gt;::copy (1,250,000 samples, 0.51%)</title><rect x="852.7" y="149" width="5.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
            <text  x="855.69" y="159.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1,500,000 samples, 0.61%)</title><rect x="478.4" y="213" width="7.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
            <text  x="481.42" y="223.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo*&gt; (12,750,000 samples, 5.15%)</title><rect x="642.9" y="197" width="60.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
            <text  x="645.91" y="207.5" >std::_..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (500,000 samples, 0.20%)</title><rect x="566.6" y="133" width="2.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="569.63" y="143.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_deallocate (2,250,000 samples, 0.91%)</title><rect x="710.8" y="197" width="10.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
            <text  x="713.85" y="207.5" ></text>
        </g>
        <g >
            <title>std::pointer_traits&lt;char*&gt;::pointer_to (1,000,000 samples, 0.40%)</title><rect x="559.5" y="133" width="4.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="562.47" y="143.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::~_Vector_base (2,000,000 samples, 0.81%)</title><rect x="1131.6" y="229" width="9.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
            <text  x="1134.60" y="239.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_M_allocate (1,000,000 samples, 0.40%)</title><rect x="46.9" y="181" width="4.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="49.95" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,250,000 samples, 0.91%)</title><rect x="564.2" y="149" width="10.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="567.24" y="159.5" ></text>
        </g>
        <g >
            <title>std::_Any_data::_M_access (250,000 samples, 0.10%)</title><rect x="887.3" y="197" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
            <text  x="890.25" y="207.5" ></text>
        </g>
        <g >
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;UserInfo const*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt;, UserInfo*&gt; (500,000 samples, 0.20%)</title><rect x="52.9" y="197" width="2.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
            <text  x="55.91" y="207.5" ></text>
        </g>
        <g >
            <title>std::function&lt;bool  (250,000 samples, 0.10%)</title><rect x="14.8" y="261" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
            <text  x="17.77" y="271.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_M_swap_data (2,250,000 samples, 0.91%)</title><rect x="729.9" y="197" width="10.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
            <text  x="732.92" y="207.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::deallocate (250,000 samples, 0.10%)</title><rect x="1161.4" y="181" width="1.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
            <text  x="1164.39" y="191.5" ></text>
        </g>
        <g >
            <title>std::__addressof&lt;char&gt; (750,000 samples, 0.30%)</title><rect x="1060.1" y="69" width="3.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
            <text  x="1063.08" y="79.5" ></text>
        </g>
        <g >
            <title>ArrayStream&lt;UserInfo&gt;::ArrayStream (4,750,000 samples, 1.92%)</title><rect x="207.9" y="229" width="22.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
            <text  x="210.86" y="239.5" >A..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (9,000,000 samples, 3.64%)</title><rect x="110.1" y="85" width="42.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
            <text  x="113.12" y="95.5" >std:..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1,250,000 samples, 0.51%)</title><rect x="123.2" y="53" width="6.0" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
            <text  x="126.23" y="63.5" ></text>
        </g>
        <g >
            <title>std::_Construct&lt;UserInfo, UserInfo const&amp;&gt; (250,000 samples, 0.10%)</title><rect x="57.7" y="181" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
            <text  x="60.68" y="191.5" ></text>
        </g>
        <g >
            <title>std::_Any_data::_M_access&lt;test (500,000 samples, 0.20%)</title><rect x="491.5" y="181" width="2.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
            <text  x="494.54" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,250,000 samples, 0.51%)</title><rect x="1122.1" y="101" width="5.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
            <text  x="1125.06" y="111.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_base (250,000 samples, 0.10%)</title><rect x="249.6" y="229" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
            <text  x="252.58" y="239.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1,750,000 samples, 0.71%)</title><rect x="961.2" y="117" width="8.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
            <text  x="964.15" y="127.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1,000,000 samples, 0.40%)</title><rect x="1150.7" y="165" width="4.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
            <text  x="1153.67" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_M_swap_data (3,500,000 samples, 1.41%)</title><rect x="445.1" y="181" width="16.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
            <text  x="448.05" y="191.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.10%)</title><rect x="480.8" y="181" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="483.81" y="191.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::operator-&lt;UserInfo*, std::vector&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt; &gt; (1,750,000 samples, 0.71%)</title><rect x="309.2" y="197" width="8.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
            <text  x="312.17" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.10%)</title><rect x="945.7" y="133" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="948.66" y="143.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (250,000 samples, 0.10%)</title><rect x="596.4" y="197" width="1.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="599.42" y="207.5" ></text>
        </g>
        <g >
            <title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (250,000 samples, 0.10%)</title><rect x="580.9" y="197" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
            <text  x="583.93" y="207.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,000,000 samples, 0.40%)</title><rect x="370.0" y="85" width="4.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
            <text  x="372.96" y="95.5" ></text>
        </g>
        <g >
            <title>std::_Function_base::_Base_manager&lt;test (500,000 samples, 0.20%)</title><rect x="896.8" y="197" width="2.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
            <text  x="899.79" y="207.5" ></text>
        </g>
        <g >
            <title>std::_Any_data::_M_access (250,000 samples, 0.10%)</title><rect x="277.0" y="165" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
            <text  x="279.99" y="175.5" ></text>
        </g>
        <g >
            <title>UserInfo::~UserInfo (250,000 samples, 0.10%)</title><rect x="654.8" y="165" width="1.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
            <text  x="657.83" y="175.5" ></text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1,250,000 samples, 0.51%)</title><rect x="166.1" y="117" width="6.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
            <text  x="169.14" y="127.5" ></text>
        </g>
        <g >
            <title>malloc (250,000 samples, 0.10%)</title><rect x="321.1" y="165" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
            <text  x="324.09" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Destroy&lt;UserInfo*, UserInfo&gt; (9,500,000 samples, 3.84%)</title><rect x="1085.1" y="229" width="45.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
            <text  x="1088.11" y="239.5" >std:..</text>
        </g>
        <g >
            <title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.10%)</title><rect x="122.0" y="53" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
            <text  x="125.04" y="63.5" ></text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;UserInfo&gt;::construct&lt;UserInfo, UserInfo const&amp;&gt; (9,000,000 samples, 3.64%)</title><rect x="353.3" y="181" width="42.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
            <text  x="356.27" y="191.5" >__gn..</text>
        </g>
        <g >
            <title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate (500,000 samples, 0.20%)</title><rect x="606.0" y="165" width="2.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
            <text  x="608.96" y="175.5" ></text>
        </g>
        <g >
            <title>std::_Vector_base&lt;UserInfo, std::allocator&lt;UserInfo&gt; &gt;::_Vector_impl::~_Vector_impl (250,000 samples, 0.10%)</title><rect x="430.7" y="197" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
            <text  x="433.75" y="207.5" ></text>
        </g>
    </g>
</svg>
